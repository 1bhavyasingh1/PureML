basePath: /
definitions:
  models.CreateOrUpdateOrgRequest:
    properties:
      avatar:
        type: string
      description:
        type: string
      handle:
        type: string
      name:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      email:
        type: string
      handle:
        type: string
      password:
        type: string
    type: object
  models.UserResetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  models.UserSignupRequest:
    properties:
      avatar:
        type: string
      bio:
        type: string
      email:
        type: string
      handle:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.UserUpdateRequest:
    properties:
      avatar:
        type: string
      bio:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: contact@pureml.com
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: PureML API Documentation
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - '*/*'
      description: Get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - Root
  /org/:
    get:
      consumes:
      - '*/*'
      description: Get all user organizations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all user organizations.
      tags:
      - Organization
  /org/:orgId/add:
    post:
      consumes:
      - '*/*'
      description: Add a user to an organization. Only accessible by owners of the
        organization.
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Add a user to an organization.
      tags:
      - Organization
  /org/:orgId/leave:
    post:
      consumes:
      - '*/*'
      description: Leave organization.
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: User email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Leave organization.
      tags:
      - Organization
  /org/:orgId/remove:
    post:
      consumes:
      - '*/*'
      description: Remove user from organization.
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: User email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Remove user from organization.
      tags:
      - Organization
  /org/:orgId/update:
    post:
      consumes:
      - '*/*'
      description: Update organization details by ID.
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Organization details
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrUpdateOrgRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update organization details.
      tags:
      - Organization
  /org/all:
    get:
      consumes:
      - '*/*'
      description: Get all organizations and their details. Only accessible by admins.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all organizations and their details.
      tags:
      - Organization
  /org/create:
    post:
      consumes:
      - '*/*'
      description: Create an organization and add the user as the owner.
      parameters:
      - description: Organization details
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrUpdateOrgRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create an organization.
      tags:
      - Organization
  /org/id/:orgId:
    get:
      consumes:
      - '*/*'
      description: Get organization details by ID.
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get organization details by ID.
      tags:
      - Organization
  /org/join:
    post:
      consumes:
      - '*/*'
      description: Join organization by join code.
      parameters:
      - description: Organization join code
        in: body
        name: join_code
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Join organization by join code.
      tags:
      - Organization
  /user/delete:
    delete:
      consumes:
      - '*/*'
      description: Delete user profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete user profile.
      tags:
      - User
  /user/login:
    post:
      consumes:
      - '*/*'
      description: User login with email and password.
      parameters:
      - description: User details
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: User login.
      tags:
      - User
  /user/profile:
    get:
      consumes:
      - '*/*'
      description: Get logged in user profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get logged in user profile.
      tags:
      - User
  /user/profile/:userhandle:
    post:
      consumes:
      - '*/*'
      description: Get user profile by handle. Accessible without login.
      parameters:
      - description: User handle
        in: path
        name: userHandle
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get user profile by handle.
      tags:
      - User
  /user/reset-password:
    post:
      consumes:
      - '*/*'
      description: User can reset password by providing old password and new password.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: User reset password.
      tags:
      - User
  /user/signup:
    post:
      consumes:
      - '*/*'
      description: User sign up with email, name, handle and password.
      parameters:
      - description: User details
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.UserSignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: User sign up.
      tags:
      - User
schemes:
- http
swagger: "2.0"
